buildscript {
  ext {
    javaVersion = JavaVersion.VERSION_1_8
    jacksonKotlinVersion = '2.9.6'
    lombokVersion = '1.18.2'
    logbackVersion = '1.2.3'
    kotlinVersion = '1.2.60'
    slf4jVersion = '1.7.25'
    vavrVersion = '0.9.2'

    phantomjsDriverVersion = '1.4.4'
    seleniumDriverVersion = '3.12.0'
    junitPlatformVersion = '1.2.0'
    junitJupiterVersion = '5.2.0'
    selenideVersion = '4.12.3'
    assertjVersion = '3.10.0'
    jgivenVersion = '0.15.3'
    hamcrestVersion = '1.3'
    junit4Version = '4.12'

    allureVersion = '2.6.0'

    asciidoctorjPdfVersion = '1.5.0-alpha.15'
  }

  dependencies {
    classpath "org.asciidoctor:asciidoctorj-pdf:$asciidoctorjPdfVersion"
  }

  //// spring-boot versions overriding, be careful with it!
  // In our case we are fixing PhantomJS (replacing older spring-boot version):
  ext['selenium.version'] = "$seleniumDriverVersion"
}

plugins {
  id 'com.jfrog.artifactory' version '4.7.5' apply false
  id 'org.asciidoctor.convert' version '1.5.7' apply false
  id 'org.ajoberstar.git-publish' version '0.3.0' apply false

  id 'org.jetbrains.kotlin.jvm' version '1.2.60' apply false
  id 'org.jetbrains.kotlin.kapt' version '1.2.60' apply false
  id 'org.jetbrains.kotlin.plugin.noarg' version '1.2.60' apply false
  id 'org.jetbrains.kotlin.plugin.spring' version '1.2.60' apply false
  id 'org.jetbrains.kotlin.plugin.allopen' version '1.2.60' apply false

  id 'io.spring.dependency-management' version '1.0.6.RELEASE' apply false
  id 'com.avast.gradle.docker-compose' version '0.6.13' apply false
  id 'com.github.johnrengelman.shadow' version '2.0.2' apply false
  id 'io.franzbecker.gradle-lombok' version '1.14' apply false
  id 'cn.bestwu.propdeps-eclipse' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-maven' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-idea' version '0.0.10' apply false
  id 'cn.bestwu.propdeps' version '0.0.10' apply false
  id 'io.qameta.allure' version '2.5' apply false
}

/*
wrapper {
  gradleVersion = '4.9'
  distributionType = 'ALL'
}
*/

apply from: "$projectDir/gradle/repositories.gradle"
apply from: "$projectDir/gradle/ide.gradle"
apply from: "$projectDir/gradle/clean.gradle"
apply from: "$projectDir/gradle/java.gradle"
apply from: "$projectDir/gradle/kotlin.gradle"
apply from: "$projectDir/gradle/main.gradle"
apply from: "$projectDir/gradle/junit.gradle"
apply from: "$projectDir/gradle/publish.gradle"
//apply from: "$projectDir/gradle/artifactory-shadow.gradle"
apply from: "$projectDir/gradle/findbugs.gradle"
//apply from: "$projectDir/gradle/jacoco.gradle"
//apply from: "$projectDir/gradle/allure.gradle"
//apply from: "$projectDir/gradle/selenide.gradle"
apply from: "$projectDir/gradle/docker-compose.gradle"
apply from: "$projectDir/gradle/docs.gradle"
